// app/page.tsx
import { UserMenu } from "@/components/shared/user-menu"

const Page = () => {
  return (
    <div className="flex items-center">
      <UserMenu />
    </div>
  )
}

export default Page

// components/flow-builder/footer-summary.tsx
import { buildLocalProcessAnalysis } from "@/data/local-analysis"
import { useRouter } from "next/router"
import { useState } from "react"

const FooterSummary = ({ flowData }) => {
  const router = useRouter()
  const [isAnalyzing, setIsAnalyzing] = useState(false)

  const handleAnalyzeProcess = () => {
    setIsAnalyzing(true)
    const apiEnabled = typeof window !== "undefined" && localStorage.getItem("process-mapper:api-data-enabled") === "true";
    if (!apiEnabled) {
      const localResult = buildLocalProcessAnalysis(flowData);
      sessionStorage.setItem("processAnalysisData", JSON.stringify(localResult));
      router.push("/process-analysis");
      setIsAnalyzing(false);
      return;
    }

    fetch("/api/analyze-process", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(flowData),
    })
    .then(response => response.json())
    .then(data => {
      sessionStorage.setItem("processAnalysisData", JSON.stringify(data));
      router.push("/process-analysis");
    })
    .catch(error => {
      console.error("Error analyzing process:", error);
    })
    .finally(() => {
      setIsAnalyzing(false);
    });
  }

  return (
    <div>
      {/* rest of code here */}
      <button onClick={handleAnalyzeProcess} disabled={isAnalyzing}>
        Analyze Process
      </button>
    </div>
  )
}

export default FooterSummary

// components/flow-builder/top-navigation.tsx
import { UserMenu } from "@/components/shared/user-menu"

const TopNavigation = () => {
  return (
    <header className="flex justify-between items-center">
      {/* rest of code here */}
      <div className="flex items-center">
        {/* existing controls */}
        <UserMenu />
      </div>
    </header>
  )
}

export default TopNavigation
